<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grundleborg&#39;s Cave</title>
    <link>http://grundleborg.github.io/</link>
    <description>Recent content on Grundleborg&#39;s Cave</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 02 May 2017 16:25:32 +0100</lastBuildDate>
    
	<atom:link href="http://grundleborg.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React Component Testing in Mattermost</title>
      <link>http://grundleborg.github.io/posts/react-component-testing-in-mattermost/</link>
      <pubDate>Tue, 02 May 2017 16:25:32 +0100</pubDate>
      
      <guid>http://grundleborg.github.io/posts/react-component-testing-in-mattermost/</guid>
      <description>Mattermost is a large web app written in ReactJS. It currently consists of a little over 300 components, built using a &amp;ldquo;Flux-like&amp;rdquo; architecture. This makes unit testing of components particularly challenging as the vast majority of them call methods on the stores directly. Of course, it&amp;rsquo;s possible to mock out the stores in every test, but it&amp;rsquo;s not really practical to do this.
If that was the end of the story, it would be a very boring one indeed.</description>
    </item>
    
  </channel>
</rss>